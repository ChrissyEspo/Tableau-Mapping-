// URL: https://beta.observablehq.com/@chrissyespo/d3-choropleth
// Title: D3 Choropleth
// Author: chrissyespo (@chrissyespo)
// Version: 135
// Runtime version: 1

const m0 = {
  id: "e845061025a9c09b@135",
  variables: [
    {
      inputs: ["md"],
      value: (function(md){return(
md`# D3 Choropleth

Unemployment rate by county, August 2016. Data: [Bureau of Labor Statistics](http://www.bls.gov/lau/#tables).`
)})
    },
    {
      name: "chart",
      inputs: ["d3","DOM","legend","topojson","us","color","data","format"],
      value: (function(d3,DOM,legend,topojson,us,color,data,format)
{
  const width = 960;
  const height = 600;
  const path = d3.geoPath();

  const svg = d3.select(DOM.svg(width, height))
      .style("width", "100%")
      .style("height", "auto");

  svg.append("g")
      .attr("transform", "translate(600,40)")
      .call(legend);

  svg.append("g")
    .selectAll("path")
    .data(topojson.feature(us, us.objects.counties).features)
    .enter().append("path")
      .attr("fill", d => color(data.get(d.id)))
      .attr("d", path)
    .append("title")
      .text(d => format(data.get(d.id)));

  svg.append("path")
      .datum(topojson.mesh(us, us.objects.states, (a, b) => a !== b))
      .attr("fill", "none")
      .attr("stroke", "white")
      .attr("stroke-linejoin", "round")
      .attr("d", path);

  return svg.node();
}
)
    },
    {
      name: "legend",
      inputs: ["d3","color","data","format"],
      value: (function(d3,color,data,format){return(
g => {
  const x = d3.scaleLinear()
      .domain(d3.extent(color.domain()))
      .rangeRound([0, 260]);

  g.selectAll("rect")
    .data(color.range().map(d => color.invertExtent(d)))
    .join("rect")
      .attr("height", 8)
      .attr("x", d => x(d[0]))
      .attr("width", d => x(d[1]) - x(d[0]))
      .attr("fill", d => color(d[0]));

  g.append("text")
      .attr("class", "caption")
      .attr("x", x.range()[0])
      .attr("y", -6)
      .attr("fill", "#000")
      .attr("text-anchor", "start")
      .attr("font-weight", "bold")
      .text(data.title);

  g.call(d3.axisBottom(x)
      .tickSize(13)
      .tickFormat(format)
      .tickValues(color.range().slice(1).map(d => color.invertExtent(d)[0])))
    .select(".domain")
      .remove();
}
)})
    },
    {
      name: "data",
      inputs: ["require"],
      value: (async function(require)
{
  let data = new Map((await require("@observablehq/unemployment")).map(d => [d.id, d.rate]));
  data.title = "Unemployment rate (%)";
  return data;
}
)
    },
    {
      name: "color",
      inputs: ["d3"],
      value: (function(d3){return(
d3.scaleQuantize()
    .domain([1, 10])
    .range(d3.schemeBlues[9])
)})
    },
    {
      name: "format",
      inputs: ["d3"],
      value: (function(d3){return(
d3.format("")
)})
    },
    {
      name: "us",
      inputs: ["d3"],
      value: (function(d3){return(
d3.json("https://unpkg.com/us-atlas@1/us/10m.json")
)})
    },
    {
      name: "topojson",
      inputs: ["require"],
      value: (function(require){return(
require("topojson-client@3")
)})
    },
    {
      name: "d3",
      inputs: ["require"],
      value: (function(require){return(
require("d3@^5.8")
)})
    }
  ]
};

const notebook = {
  id: "e845061025a9c09b@135",
  modules: [m0]
};

export default notebook;
